<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Lab Notes</title>
	<subtitle>Technical notes to myself (and you, apparently)</subtitle>
	<link href="http://labnotes.decampo.org/feeds/posts/default" rel="self"/>
	<link href="http://labnotes.decampo.org/"/>
	<updated>2021-04-19T20:00:00Z</updated>
	<id>http://labnotes.decampo.org/</id>
	<author>
		<name>Ray DeCampo</name>
		<email>ray@decampo.org</email>
	</author>
	
	<entry>
		<title>Moving to Eleventy From Jekyll</title>
		<link href="http://labnotes.decampo.org/2021/09/28/moving-to-eleventy.html"/>
		<updated>2021-04-19T20:00:00Z</updated>
		<id>http://labnotes.decampo.org/2021/09/28/moving-to-eleventy.html</id>
		<content type="html">&lt;p&gt;After upgrading to Fedora 34, my Jekyll environment was broken again.  So it was time to find another solution that didn&#39;t require so much attention.  Enter &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt;, a static site generator that runs in the Node.js environment.&lt;/p&gt;
&lt;p&gt;I started by following &lt;a href=&quot;https://stedman.dev/2020/04/29/make-the-jump-from-jekyll-to-javascript/&quot;&gt;https://stedman.dev/2020/04/29/make-the-jump-from-jekyll-to-javascript/&lt;/a&gt;, but in the end I decided to forgo GitHub Actions and just generate the site myself and check it in under the &lt;code&gt;docs/&lt;/code&gt; directory.  You can look at the history of the &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io&quot;&gt;raydecampo.github.io&lt;/a&gt; repository, in particular the &lt;code&gt;eleventy&lt;/code&gt; branch, for all the gritty details.&lt;/p&gt;
&lt;p&gt;The steps went something like this (links to the appropriate commits follow the description):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Following the Install and Configure section of the &lt;a href=&quot;https://stedman.dev/2020/04/29/make-the-jump-from-jekyll-to-javascript/&quot;&gt;stedman.dev document&lt;/a&gt;, get Eleventy installed and running.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/64a6dac7587eb30c9cf889af9f426b428e64efd4&quot;&gt;64a6dac&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At this point, influenced by &lt;a href=&quot;https://github.com/andeersg/andeers.com&quot;&gt;https://github.com/andeersg/andeers.com&lt;/a&gt;, I restructured so that the source of the blog contents were kept under the &lt;code&gt;src/&lt;/code&gt; directory.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/51a266656fe0265c4c3f55b6d0ec956d3c880836&quot;&gt;51a2666&lt;/a&gt;, &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/66dbf6bd2fcec064770b73d9d176d2fe49b8c2e7&quot;&gt;66dbf6b&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added permalink metadata to the blogs so that the files end up in the same place as they did when jekyll was creating the site (and blogger before that).  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/77e6af5efc35a694b0e5fd6f2c1c00a61ae5edbd&quot;&gt;77e6af5&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, the jekyll built-in &lt;code&gt;site.posts&lt;/code&gt; variable is no longer available under Eleventy.  So I defined some collections and used them to fix the pages with lists of posts. (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/7a7e5b59170e43dcd7f87510da26653ef0c6115c&quot;&gt;7a7e5b5&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next up was fixing CSS.  Eleventy has no built in support for SASS (kind of strange), so I added a node script entry to run SASS.  I also downloaded a copy of the CSS for the jekyll theme I had been using.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/db0d7ac73df098eadf14053db1e884be5dc19447&quot;&gt;db0d7ac&lt;/a&gt;, &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/1b1433f2a73d838a1f15407e8d50658020fd3aac&quot;&gt;1b1433f&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next up was installing the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/rss/&quot;&gt;Eleventy RSS plugin&lt;/a&gt; to restore RSS functionality.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/4ef3cd952615182d005143729a4fb2e3abf2e0ca&quot;&gt;4ef3cd9&lt;/a&gt;, &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/a6a09f8b1e585b9f7ac58721afd2f88bc40eb11d&quot;&gt;a6a09f8&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next we get tags working the way they did before.  Stole a &lt;a href=&quot;https://github.com/philhawksworth/hawksworx.com/blob/master/src/site/_filters/getTagList.js&quot;&gt;code snippet&lt;/a&gt; from philhawksworth (H/T).  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/3121301d881bc9077d95bb586ad65d0d81ad27ad&quot;&gt;3121301&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add some metadata and fix up the parameterized data in the &lt;code&gt;default.html&lt;/code&gt; template.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/4233afc428cf736ccf8fc47a43cdfbcf73ea3ba7&quot;&gt;4233afc&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install and configure the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/syntaxhighlight/&quot;&gt;Eleventy syntax highlighting plugin&lt;/a&gt;.  Don&#39;t forget to download a Prism CSS file.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/14c89fec5909a865c283ad6c09cb0f6b3d43beb6&quot;&gt;14c89fe&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally it was time to get things working on GitHub Pages.  GitHub Pages will let you use either the root directory or the &lt;code&gt;docs/&lt;/code&gt; directory of the repository as web root.  So I changed the output directory for Eleventy to the &lt;code&gt;docs/&lt;/code&gt; directory.  I also needed a passthrough for the CNAME file.  Then I just needed to change the configuration in GitHub (Settings -&amp;gt; Pages) and I was all set.  (&lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/1aa4e97b25b5e3540486778310ce56b433020111&quot;&gt;1aa4e97&lt;/a&gt;, &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/5410778b24964de100f1920e989672b1248d7764&quot;&gt;5410778&lt;/a&gt;, &lt;a href=&quot;https://github.com/RayDeCampo/raydecampo.github.io/commit/6f2d68b6d3611b0a0e811854eb4a0a95c1720ac9&quot;&gt;6f2d68b&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
	</entry>
	
	<entry>
		<title>Frame Size Issue with Java HTTP Client</title>
		<link href="http://labnotes.decampo.org/2021/04/19/java-http-client-frame-size.html"/>
		<updated>2021-04-19T20:00:00Z</updated>
		<id>http://labnotes.decampo.org/2021/04/19/java-http-client-frame-size.html</id>
		<content type="html">&lt;p&gt;If you hit this error when using the HTTP client built into Java:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Caused by: java.io.IOException: protocol error: Frame type(80) length(4740180) exceeds MAX_FRAME_SIZE(16384)&lt;br /&gt;        at jdk.internal.net.http.Http2Connection.protocolError(Http2Connection.java:952) ~[java.net.http:?]&lt;br /&gt;        at jdk.internal.net.http.Http2Connection.processFrame(Http2Connection.java:714) ~[java.net.http:?]&lt;br /&gt;        at jdk.internal.net.http.frame.FramesDecoder.decode(FramesDecoder.java:155) ~[java.net.http:?]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try using a client configured for HTTP 1.1:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;        client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;newBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;followRedirects&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Redirect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ALWAYS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HTTP_1_1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Development Mail Server (CentOS 8)</title>
		<link href="http://labnotes.decampo.org/2020/11/09/development-mail-server.html"/>
		<updated>2020-11-09T21:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/11/09/development-mail-server.html</id>
		<content type="html">&lt;p&gt;As you are probably aware, any sufficiently developed software application will eventually grow until it implements email.  A frequent stepping stone along that evolutionary path is for an application to gain the ability to send email.  If your application sends email, at a certain point it will become inconvenient to continue to use real email addresses and servers when developing and testing the application.  The solution is to set up a development mail server.&lt;/p&gt;
&lt;p&gt;An important note about the development mail server is that it should NOT participate in the delivery or relay of real email.  If you configure it wrong and create an open relay for spam, expect an angry communication from your ISP, usually invoking your name in vain and threatening termination of services.&lt;/p&gt;
&lt;p&gt;So the goal here is to create a black hole of email which will accept mail for the configured server only.  Of course, we do want to read the email (at least some of the email) so that we can see that our application is doing what we want.  So we will want to be able to access the email with an IMAP client like Thunderbird.&lt;/p&gt;
&lt;p&gt;We&#39;ll be running our development mail server on a CentOS 8 server, using postfix as the SMTP server and dovecot as the IMAP server.  We will configure the server to accept mail for the domain &lt;code&gt;example.com&lt;/code&gt;, you should change this to whatever domain you use internally for development.  The DNS name for the server will be &lt;code&gt;devmail.example.com&lt;/code&gt; and it is assumed this is already configured.&lt;/p&gt;
&lt;h2&gt;Firewall&lt;/h2&gt;
&lt;p&gt;First things first, configure the firewall to allow SMTP and IMAP traffic.  We use the zone &lt;code&gt;internal&lt;/code&gt; for our intranet, you probably use a different zone:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; firewall-cmd --zone&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;internal --add-service smtp&lt;br /&gt;success&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; firewall-cmd --zone&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;internal --add-service imap&lt;br /&gt;success&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; firewall-cmd --zone&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;internal --add-service smtp --permanent&lt;br /&gt;success&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; firewall-cmd --zone&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;internal --add-service imap --permanent&lt;br /&gt;success&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Postfix&lt;/h2&gt;
&lt;p&gt;Now we are ready to install the postfix server.  We also create an OS user to own the virtual mailboxes.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; postfix&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;groupadd&lt;/span&gt; --system --gid &lt;span class=&quot;token number&quot;&gt;2525&lt;/span&gt; vmail&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useradd&lt;/span&gt; --system --uid &lt;span class=&quot;token number&quot;&gt;2525&lt;/span&gt; --shell /sbin/nologin --home /var/mail/vhosts --no-user-group -g vmail --comment &lt;span class=&quot;token string&quot;&gt;&quot;Virtual Mailbox Owner&quot;&lt;/span&gt; vmail&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p /var/mail/vhosts/example.com&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chown&lt;/span&gt; -R vmail:vmail /var/mail/vhosts&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we configure postfix by editing the &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt; file.  The &lt;code&gt;myhostname&lt;/code&gt; parameter is set to the DNS name, &lt;code&gt;devmail.example.com&lt;/code&gt;.  Adjust the &lt;code&gt;inet_interfaces&lt;/code&gt; parameter as desired.  (In my case I have &lt;code&gt;devmail&lt;/code&gt; defined in the &lt;code&gt;/etc/hosts&lt;/code&gt; file to bind it to a specific network interface so I am using &lt;code&gt;devmail, localhost&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Very importantly, set the &lt;code&gt;smtpd_relay_restrictions&lt;/code&gt; parameter to &lt;em&gt;reject_unauth_destination&lt;/em&gt;.  This will prevent the server from attempting to relay mail to other mail servers.&lt;/p&gt;
&lt;p&gt;Finally the virtual mailbox must be configured.  We need to set the &lt;code&gt;virtual_mailbox_domains&lt;/code&gt; setting to include our domain, &lt;em&gt;example.com&lt;/em&gt;.  The &lt;code&gt;virtual_mailbox_base&lt;/code&gt; parameter is set to a directory which will contain the mailboxes.  The &lt;code&gt;virtual_mailbox_maps&lt;/code&gt; parameter is set to a file which will contain details about the users and mailboxes the server knows about.  Finally the &lt;code&gt;virtual_uid_maps&lt;/code&gt; and &lt;code&gt;virtual_gid_maps&lt;/code&gt; are used to tell postfix to use our new &lt;code&gt;vmail&lt;/code&gt; OS user when setting the permissions of the mailboxes.&lt;/p&gt;
&lt;p&gt;Here is the result of diffing the provided &lt;code&gt;main.cf&lt;/code&gt; with the new, configured &lt;code&gt;main.cf&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;[ray@wxyz ~]$ sudo diff main.cf.in main.cf&lt;br /&gt;&lt;span class=&quot;token coord&quot;&gt;95a96&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; myhostname = devmail.example.com&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;135c136&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; inet_interfaces = localhost&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; inet_interfaces = devmail, localhost&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;316a318,321&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; # Prevent relaying, see /usr/share/doc/postfix/README_FILES/SMTPD_ACCESS_README&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; # also postconf(5) man page&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; smtpd_relay_restrictions = reject_unauth_destination&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;738a744,753&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; # VIRTUAL DOMAINS&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; # See /usr/share/doc/postfix/README_FILES/VIRTUAL_README, section titled&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; # &quot;Postfix virtual MAILBOX example: separate domains, non-UNIX accounts&quot;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; virtual_mailbox_domains = example.com&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; virtual_mailbox_base = /var/mail/vhosts&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; virtual_mailbox_maps = hash:/etc/postfix/vmailbox&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; virtual_uid_maps = static:2525&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; virtual_gid_maps = static:2525&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One final piece of configuration for postfix is to create the &lt;code&gt;/etc/postfix/vmailbox&lt;/code&gt; file.  In our case, instead of creating individual users (who wants to be responsible for administering individual accounts on a development mail server?) we&#39;ll create one catchall mailbox that all mail will be routed to.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;vmailbox &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;EOF&lt;br /&gt;@example.com       example.com/all/Maildir/&lt;br /&gt;EOF&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; postmap /etc/postfix/vmailbox&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are ready to enable and start the postfix server:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt;  systemctl &lt;span class=&quot;token builtin class-name&quot;&gt;enable&lt;/span&gt; postfix&lt;br /&gt;Created symlink /etc/systemd/system/multi-user.target.wants/postfix.service → /usr/lib/systemd/system/postfix.service.&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt;  systemctl start postfix&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Testing SMTP using netcat&lt;/h3&gt;
&lt;p&gt;We can test the postfix server using netcat:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@stinger ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;nc&lt;/span&gt; devmail &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;EOM&lt;br /&gt;EHLO STINGER&lt;br /&gt;MAIL FROM:auser@example.com&lt;br /&gt;RCPT TO:someone@example.com&lt;br /&gt;DATA&lt;br /&gt;Subject:Testing an email on the new environment&lt;br /&gt;&lt;br /&gt;This is a test of our postfix configuration.&lt;br /&gt;.&lt;br /&gt;QUIT&lt;br /&gt;EOM&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;220&lt;/span&gt; devmail.example.com ESMTP Postfix&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-devmail.example.com&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-PIPELINING&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-SIZE &lt;span class=&quot;token number&quot;&gt;10240000&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-VRFY&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-ETRN&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-STARTTLS&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-ENHANCEDSTATUSCODES&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-8BITMIME&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-DSN&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; SMTPUTF8&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.1&lt;/span&gt;.0 Ok&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.1&lt;/span&gt;.5 Ok&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;354&lt;/span&gt; End data with &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;LF&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;.&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;LF&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;.0 Ok: queued as EF2DD1D5C89&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;221&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;.0 Bye&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Furthermore we can verify that relaying to another email server fails:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@stinger ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;nc&lt;/span&gt; devmail &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;EOM&lt;br /&gt;EHLO STINGER&lt;br /&gt;MAIL FROM:auser@example.com&lt;br /&gt;RCPT TO:ray@example.net&lt;br /&gt;QUIT&lt;br /&gt;EOM&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;220&lt;/span&gt; devmail.example.com ESMTP Postfix&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-devmail.example.com&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-PIPELINING&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-SIZE &lt;span class=&quot;token number&quot;&gt;10240000&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-VRFY&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-ETRN&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-STARTTLS&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-ENHANCEDSTATUSCODES&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-8BITMIME&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;-DSN&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; SMTPUTF8&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.1&lt;/span&gt;.0 Ok&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;554&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5.7&lt;/span&gt;.1 &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ray@example.net&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;: Relay access denied&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;221&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;.0 Bye&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Dovecot&lt;/h2&gt;
&lt;h3&gt;Installation and Configuration&lt;/h3&gt;
&lt;p&gt;I suppose you would like to be able to read the mail too?  After all, we aren&#39;t all perfect coders who get it right on the first try.&lt;/p&gt;
&lt;p&gt;In that case, we will set up a dovecot server to provide access to the mailbox via IMAP.&lt;/p&gt;
&lt;p&gt;Note the the firewall was already configured to allow IMAP traffic above.  Installing and enabling dovecot involves the usual steps:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; dovecot&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&quot;token builtin class-name&quot;&gt;enable&lt;/span&gt; dovecot&lt;br /&gt;Created symlink /etc/systemd/system/multi-user.target.wants/dovecot.service → /usr/lib/systemd/system/dovecot.service.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we configure authentication to use a custom password file instead of the system authentication by editing the &lt;code&gt;/etc/dovecot/conf.d/10-auth.conf&lt;/code&gt; file.  The resulting changes in diff format:&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token coord&quot;&gt;10a11&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; disable_plaintext_auth = no&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;122c123&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; !include auth-system.conf.ext&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; #!include auth-system.conf.ext&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;125c126&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; #!include auth-passwdfile.conf.ext&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; !include auth-passwdfile.conf.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we tell dovecot where to find our mailbox files by editing &lt;code&gt;/etc/dovecot/conf.d/10-mail.conf&lt;/code&gt;, by setting the &lt;code&gt;mail_location&lt;/code&gt; parameter:&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token coord&quot;&gt;30c30&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; #mail_location =&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token coord&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-arrow inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; mail_location = maildir:/var/mail/vhosts/%d/%n/Maildir&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we edit the &lt;code&gt;/etc/dovecot/conf.d/auth-passwdfile.conf.ext&lt;/code&gt; file.  This was the configuration we activated when editing &lt;code&gt;10-auth.conf&lt;/code&gt; and will contain the details of our custom authentication.  The resulting file is small enough to reproduce here (with commented-out lines omitted):&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;passdb {&lt;br /&gt;  driver = passwd-file&lt;br /&gt;  args = /etc/dovecot/%d-passdb&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;userdb {&lt;br /&gt;  driver = static&lt;br /&gt;  args = uid=vmail gid=vmail home=/var/mail/vhosts/%d/%n&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We configure dovecot to use the password file in the pattern &lt;code&gt;/etc/dovecot/%d-passwd&lt;/code&gt;.  The &lt;code&gt;%d&lt;/code&gt; here is a placeholder for the domain, &lt;em&gt;example.com&lt;/em&gt;, so out password file will be &lt;code&gt;/etc/dovecot/example.com-passdb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since we are not all that concerned about security for our fake email, we can create the password file in plaintext:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz dovecot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;example.com-passdb &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;EOF&lt;br /&gt;all@example.com:{PLAIN}password&lt;br /&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can start the dovecot server:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz dovecot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl start dovecot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we set up a cron job to delete old mail older than a week old on a weekly basis:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz dovecot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;/etc/cron.weekly/delete-old-mail &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;EOF&lt;br /&gt;#!/bin/bash&lt;br /&gt;threshold=&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt; --date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;last week&#39;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;+%d-%b-%Y&#39;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;doveadm expunge -u all@example.com mailbox INBOX SENTBEFORE &lt;span class=&quot;token variable&quot;&gt;${threshold}&lt;/span&gt;&lt;br /&gt;doveadm purge -u all@example.com&lt;br /&gt;EOF&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@wxyz dovecot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;744&lt;/span&gt; /etc/cron.weekly/delete-old-mail&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Testing via OpenSSL&lt;/h3&gt;
&lt;p&gt;Since dovecot will use the STARTTLS protocol by default, we can&#39;t just connect to it via netcat like postfix.  We need to use openssl, which supports encrypted traffic and specifically the STARTTLS protocol.&lt;/p&gt;
&lt;p&gt;Below is an example session showing how to use openssl to make the connection.  The commands entered interactively all start with a&lt;em&gt;n&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; is a number.  I&#39;ve edited down some of the output from the server.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ray@stinger ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ openssl s_client -connect devmail:143 -starttls imap&lt;br /&gt;CONNECTED&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;00000003&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; OU &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IMAP server, CN &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; imap.example.com, emailAddress &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; postmaster@example.com&lt;br /&gt;verify error:num&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt;:self signed certificate&lt;br /&gt;verify return:1&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; OU &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IMAP server, CN &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; imap.example.com, emailAddress &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; postmaster@example.com&lt;br /&gt;verify return:1&lt;br /&gt;---&lt;br /&gt;Certificate chain&lt;br /&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; s:/OU&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;IMAP server/CN&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;imap.example.com/emailAddress&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;postmaster@example.com&lt;br /&gt;   i:/OU&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;IMAP server/CN&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;imap.example.com/emailAddress&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;postmaster@example.com&lt;br /&gt;---&lt;br /&gt;Server certificate&lt;br /&gt;-----BEGIN CERTIFICATE-----&lt;br /&gt;MIIEUzCCArugAwIBAgIUJLx3lRtnTxo0WoCjsTsRhEQklZMwDQYJKoZIhvcNAQEL&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;duHQueW0oQ&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;br /&gt;-----END CERTIFICATE-----&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/OU&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;IMAP server/CN&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;imap.example.com/emailAddress&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;postmaster@example.com&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;issuer&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/OU&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;IMAP server/CN&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;imap.example.com/emailAddress&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;postmaster@example.com&lt;br /&gt;---&lt;br /&gt;No client certificate CA names sent&lt;br /&gt;Peer signing digest: SHA512&lt;br /&gt;Server Temp Key: ECDH, P-256, &lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt; bits&lt;br /&gt;---&lt;br /&gt;SSL handshake has &lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2208&lt;/span&gt; bytes and written &lt;span class=&quot;token number&quot;&gt;441&lt;/span&gt; bytes&lt;br /&gt;---&lt;br /&gt;New, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES256-GCM-SHA384&lt;br /&gt;Server public key is &lt;span class=&quot;token number&quot;&gt;3072&lt;/span&gt; bit&lt;br /&gt;Secure Renegotiation IS supported&lt;br /&gt;Compression: NONE&lt;br /&gt;Expansion: NONE&lt;br /&gt;No ALPN negotiated&lt;br /&gt;SSL-Session:&lt;br /&gt;    Protocol  &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; TLSv1.2&lt;br /&gt;    Cipher    &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; ECDHE-RSA-AES256-GCM-SHA384&lt;br /&gt;    Session-ID: 37D8B6A46719F7C0D16D122C8E6&lt;br /&gt;    Session-ID-ctx:&lt;br /&gt;    Master-Key: 2E69D75A3D0B2A6CB4AECCAA5A3&lt;br /&gt;    Key-Arg   &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; None&lt;br /&gt;    Krb5 Principal: None&lt;br /&gt;    PSK identity: None&lt;br /&gt;    PSK identity hint: None&lt;br /&gt;    TLS session ticket lifetime hint: &lt;span class=&quot;token number&quot;&gt;7200&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;seconds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    TLS session ticket:&lt;br /&gt;    0000 - &lt;span class=&quot;token number&quot;&gt;95&lt;/span&gt; 4e 5a b2 c3 a7 &lt;span class=&quot;token number&quot;&gt;89&lt;/span&gt; 8b-42 &lt;span class=&quot;token number&quot;&gt;49&lt;/span&gt; 07 2b bb 6f &lt;span class=&quot;token number&quot;&gt;57&lt;/span&gt; 6c   .NZ&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.BI.+.oWl&lt;br /&gt;    0010 - ef &lt;span class=&quot;token number&quot;&gt;69&lt;/span&gt; 9b &lt;span class=&quot;token number&quot;&gt;92&lt;/span&gt; 2f f3 aa 5d-a7 &lt;span class=&quot;token number&quot;&gt;51&lt;/span&gt; 6d &lt;span class=&quot;token number&quot;&gt;77&lt;/span&gt; 2c b4 4c &lt;span class=&quot;token number&quot;&gt;19&lt;/span&gt;   .i&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;.Qmw,.L.&lt;br /&gt;    0020 - 03 &lt;span class=&quot;token function&quot;&gt;dd&lt;/span&gt; e8 5f 5e &lt;span class=&quot;token number&quot;&gt;23&lt;/span&gt; 6b dd-dd &lt;span class=&quot;token number&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;65&lt;/span&gt; c8 d0 &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;._^&lt;span class=&quot;token comment&quot;&gt;#k..A.He..P&lt;/span&gt;&lt;br /&gt;    0030 - d3 e5 f6 cc &lt;span class=&quot;token number&quot;&gt;72&lt;/span&gt; 05 cf 6f-c3 b0 f3 &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;83&lt;/span&gt; ff eb &lt;span class=&quot;token number&quot;&gt;74&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;o&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.t&lt;br /&gt;&lt;br /&gt;    Start Time: &lt;span class=&quot;token number&quot;&gt;1594842880&lt;/span&gt;&lt;br /&gt;    Timeout   &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sec&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    Verify &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; code: &lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self signed certificate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;---&lt;br /&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; OK Pre-login capabilities listed, post-login capabilities have more.&lt;br /&gt;&lt;br /&gt;a1 LOGIN all@example.com p&lt;br /&gt;* CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;SORT&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token environment constant&quot;&gt;DISPLAY&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;THREAD&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;REFERENCES &lt;span class=&quot;token assign-left variable&quot;&gt;THREAD&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;REFS &lt;span class=&quot;token assign-left variable&quot;&gt;THREAD&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ORDEREDSUBJECT&lt;br /&gt;MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS&lt;br /&gt;LIST-EXTENDED &lt;span class=&quot;token assign-left variable&quot;&gt;I18NLEVEL&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES&lt;br /&gt;WITHIN &lt;span class=&quot;token assign-left variable&quot;&gt;CONTEXT&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;SEARCH LIST-STATUS BINARY MOVE &lt;span class=&quot;token assign-left variable&quot;&gt;SNIPPET&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;FUZZY&lt;br /&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;PREVIEW&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;FUZZY LITERAL+ NOTIFY SPECIAL-USE&lt;br /&gt;a1 OK Logged &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;a2 LIST &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;br /&gt;* LIST &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;HasNoChildren&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt; INBOX&lt;br /&gt;a2 OK List completed &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.001&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.000&lt;/span&gt; secs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;a3 EXAMINE INBOX&lt;br /&gt;* FLAGS &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Answered &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Flagged &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Deleted &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Seen &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Draft&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;* OK &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;PERMANENTFLAGS &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Read-only mailbox.&lt;br /&gt;* &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; EXISTS&lt;br /&gt;* &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; RECENT&lt;br /&gt;* OK &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;UNSEEN &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; First unseen.&lt;br /&gt;* OK &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;UIDVALIDITY &lt;span class=&quot;token number&quot;&gt;1594842093&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; UIDs valid&lt;br /&gt;* OK &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;UIDNEXT &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Predicted next &lt;span class=&quot;token environment constant&quot;&gt;UID&lt;/span&gt;&lt;br /&gt;a3 OK &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;READ-ONLY&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Examine completed &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.002&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.000&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.001&lt;/span&gt; secs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;a4 FETCH &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; BODY&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;* &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; FETCH &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BODY&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;405&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;Return-Path: &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;auser@example.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;X-Original-To: someone@example.com&lt;br /&gt;Delivered-To: someone@example.com&lt;br /&gt;Received: from STINGER &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;unknown &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10.0&lt;/span&gt;.0.200&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        by devmail.prosoft.prosoftcm.com &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Postfix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; with ESMTP &lt;span class=&quot;token function&quot;&gt;id&lt;/span&gt; EF2DD1D5C89&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;someone@example.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; Wed, &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; Jul &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:03:53 -0400 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;EDT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;Subject:Testing an email on the new environment&lt;br /&gt;&lt;br /&gt;This is a &lt;span class=&quot;token builtin class-name&quot;&gt;test&lt;/span&gt; of our postfix configuration.&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;a4 OK Fetch completed &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.002&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.000&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.001&lt;/span&gt; secs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;a5 LOGOUT&lt;br /&gt;* BYE Logging out&lt;br /&gt;a5 OK Logout completed &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.001&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;0.000&lt;/span&gt; secs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;br /&gt;closed&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our command line test is successful.  It should be possible to configure an IMAP client like Thunderbird to read the mailbox.  Keep in mind many IMAP clients try to make configuration easy by using DNS settings which (presumably) won&#39;t exist for your development mail server.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>HTTPS for WildFly 20</title>
		<link href="http://labnotes.decampo.org/2020/08/09/wildfly-20-https.html"/>
		<updated>2020-08-09T16:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/08/09/wildfly-20-https.html</id>
		<content type="html">&lt;p&gt;The following documents installing an actual certificate in on WildFly 20, although these steps have been tested on WildFly 19 as well.&lt;/p&gt;
&lt;p&gt;In order to configure WildFly to use HTTPS with an actual certificate, we start by generating a certificate request:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz wildfly&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; httpscert&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz wildfly&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; httpscert&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;full.name.of.the.server&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ keytool -alias tomcat -keyalg RSA -keystore https.keystore -genkey&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ keytool -alias tomcat -keyalg RSA -keystore https.keystore -certreq -file &lt;span class=&quot;token variable&quot;&gt;${server}&lt;/span&gt;.csr&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the &lt;code&gt;keytool&lt;/code&gt; utility comes with the Java distribution.&lt;/p&gt;
&lt;p&gt;Now submit the request to the certificate authority and get the signed certificate back. You may get some intermediate certificates along with the signed certificate, these will need to be imported into your keystore.&lt;/p&gt;
&lt;p&gt;If for some reason the root certificate is not recognized, it will need to be imported as well.  In my case I was using my company certificate authority so I imported the root certificate.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Import the root certificate, if necessary:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ keytool -alias root -keystore https.keystore -import -file ca.cert.pem&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Import any intermediates (use a different alias for each):&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ keytool -alias intermediate -keystore https.keystore -import -file ca-chain.cert.pem&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# NOTE: In my case ca-chain.cert.pem has multiple certificates, keytool takes the first one&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Import the actual certificate&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ keytool -alias tomcat -keystore https.keystore -import -file &lt;span class=&quot;token variable&quot;&gt;${server}&lt;/span&gt;.cert.pem&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Put the keystore in the right place&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; https.keystore &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/wildfly/standalone/configuration/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we configure WildFly as in &lt;a href=&quot;https://docs.wildfly.org/20/WildFly_Elytron_Security.html#configure-ssltls&quot;&gt;https://docs.wildfly.org/20/WildFly_Elytron_Security.html#configure-ssltls&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;configure-https.txt&lt;/code&gt; file of commands for the WildFly command line tool:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;connect&lt;br /&gt;batch&lt;br /&gt;/subsystem=elytron/key-store=https-key-store:add(path=https.keystore,relative-to=jboss.server.config.dir,credential-reference={clear-text=yourpassword},type=JKS)&lt;br /&gt;/subsystem=elytron/key-manager=https-key-manager:add(key-store=https-key-store,credential-reference={clear-text=itsdifferentnow})&lt;br /&gt;/subsystem=elytron/server-ssl-context=https-ssl-context:add(key-manager=https-key-manager,protocols=[&quot;TLSv1.2&quot;])&lt;br /&gt;/subsystem=undertow/server=default-server/https-listener=https:undefine-attribute(name=security-realm)&lt;br /&gt;/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=ssl-context,value=https-ssl-context)&lt;br /&gt;run-batch&lt;br /&gt;reload&lt;br /&gt;exit&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note you&#39;ll need to substitute in your actual keystore password in the above.&lt;/p&gt;
&lt;p&gt;Then we run the commands:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz httpscert&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;wildfly@wxyz wildfly&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ wildfly/bin/jboss-cli.sh &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;configure-https.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;WildFly should be using your new certificate to handle HTTPS requests now.  Note that WildFly by default listens on 8443 for HTTPS.&lt;/p&gt;
&lt;p&gt;If desired, you can forward the default HTTPS port 443 to port 8443 on CentOS or RedHat systems with the following command:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;[root@wxyz ~]# firewall-cmd --permanent --add-forward-port=port=443:proto=tcp:toport=8443&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Compiling Subversion Python 2 Bindings for CentOS 8</title>
		<link href="http://labnotes.decampo.org/2020/08/02/subversion-python2-centos8.html"/>
		<updated>2020-08-02T15:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/08/02/subversion-python2-centos8.html</id>
		<content type="html">&lt;p&gt;I recently needed to install Trac 1.4 on a CentOS 8 server.  Trac 1.4 still uses Python 2 and while CentOS 8 supports Python 2, Python 3 is the default.  I suspect this went into the decision not to offer any Python bindings for Subversion in the CentOS 8 repositories.&lt;/p&gt;
&lt;p&gt;I also checked WANDisco, which typically has advanced versions of Subversion packaged for CentOS, but they did not have the Python bindings for Python 2, only Python 3.&lt;/p&gt;
&lt;p&gt;As a result, I was forced to compile the bindings myself.&lt;/p&gt;
&lt;p&gt;I started with a new CentOS 8 VM created just for this purpose, selecting the &amp;quot;Development Tools&amp;quot; and &amp;quot;RPM Development Tools&amp;quot; software groups for installation.&lt;/p&gt;
&lt;p&gt;From there we create a user named &lt;code&gt;mockbuild&lt;/code&gt; which will perform the actual build.  This username is referenced in the source RPMs for CentOS 8 and prevents spurious error messages.  Plus it&#39;s a throwaway instance so it doesn&#39;t really matter.&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;[root@localhost ~]# useradd -G wheel mockbuild&lt;br /&gt;[root@localhost ~]# passwd mockbuild&lt;br /&gt;[root@localhost ~]# dnf install yum-utils&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We installed &lt;code&gt;yum-utils&lt;/code&gt; as well to get &lt;code&gt;yumdownloader&lt;/code&gt;.  This tool will help us obtain the source RPMs.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ yumdownloader --source subversion&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -ivh subversion-1.10.2-1.module_el8.0.0+45+75bba4f4.src.rpm&lt;br /&gt;Updating / installing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:subversion-1.10.2-1.module_el8.0.&lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are also going to need Python 2:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python2 python2-devel&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; alternatives --set python /usr/bin/python2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next step is to install the dependencies.  The &lt;code&gt;yum-builddep&lt;/code&gt; tool can help us here:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf config-manager --set-enabled PowerTools&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum-builddep subversion&lt;br /&gt;Package perl-generators-1.10-9.el8.noarch is already installed.&lt;br /&gt;Package libtool-2.4.6-25.el8.x86_64 is already installed.&lt;br /&gt;Package autoconf-2.69-27.el8.noarch is already installed.&lt;br /&gt;Package gettext-0.19.8.1-17.el8.x86_64 is already installed.&lt;br /&gt;Package systemd-239-30.el8_2.x86_64 is already installed.&lt;br /&gt;Package zip-3.0-23.el8.x86_64 is already installed.&lt;br /&gt;Package unzip-6.0-43.el8.x86_64 is already installed.&lt;br /&gt;Package which-2.21-12.el8.x86_64 is already installed.&lt;br /&gt;No matching package to install: &lt;span class=&quot;token string&quot;&gt;&#39;utf8proc-devel&#39;&lt;/span&gt;&lt;br /&gt;No matching package to install: &lt;span class=&quot;token string&quot;&gt;&#39;libserf-devel &gt;= 1.3.0&#39;&lt;/span&gt;&lt;br /&gt;Not all dependencies satisfied&lt;br /&gt;Error: Some packages could not be found.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the dependencies which were not found, we&#39;ll need to download and compile them ourselves.  (In general, however, double check that the packages are not in a disabled repository like PowerTools.)&lt;/p&gt;
&lt;p&gt;We&#39;ll start with &lt;code&gt;utf8proc-devel&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ yumdownloader --source utf8proc&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -ivh utf8proc-2.1.1-4.module_el8.0.0+45+75bba4f4.src.rpm&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum-builddep utf8proc&lt;br /&gt;Package gcc-8.3.1-5.el8.0.2.x86_64 is already installed.&lt;br /&gt;Dependencies resolved.&lt;br /&gt;Nothing to do.&lt;br /&gt;Complete&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; rpmbuild/SPECS/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ rpmbuild -ba utf8proc.spec&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Output elided for brevity&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/RPMS/x86_64/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost x86_64&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -ivh utf8proc-2.1.1-4.el8.x86_64.rpm utf8proc-devel-2.1.1-4.el8.x86_64.rpm&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;sudo&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; mockbuild:&lt;br /&gt;Verifying&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.                          &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;br /&gt;Preparing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.                          &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;br /&gt;Updating / installing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:utf8proc-2.1.1-4.el8             &lt;span class=&quot;token comment&quot;&gt;################################# [ 50%]&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;:utf8proc-devel-2.1.1-4.el8       &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next the &lt;code&gt;libserf-devel&lt;/code&gt; library:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost x86_64&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ yumdownloader --source libserf&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -ivh libserf-1.3.9-8.module_el8.0.0+45+75bba4f4.src.rpm&lt;br /&gt;Updating / installing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:libserf-1.3.9-8.module_el8.0.0+45&lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum-builddep libserf&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Eliding 24 packages installed&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; rpmbuild/SPECS/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ rpmbuild -ba libserf.spec&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Eliding output for brevity&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/RPMS/x86_64/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost x86_64&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -ivh libserf-1.3.9-8.el8.x86_64.rpm libserf-devel-1.3.9-8.el8.x86_64.rpm&lt;br /&gt;Verifying&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.                          &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;br /&gt;Preparing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.                          &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;br /&gt;Updating / installing&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:libserf-1.3.9-8.el8              &lt;span class=&quot;token comment&quot;&gt;################################# [ 50%]&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;:libserf-devel-1.3.9-8.el8        &lt;span class=&quot;token comment&quot;&gt;################################# [100%]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, we are getting good at this.  Let&#39;s see how we are with the dependencies for &lt;code&gt;subversion&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum-builddep subversion&lt;br /&gt;Error:&lt;br /&gt; Problem: conflicting requests&lt;br /&gt;  - package junit-1:4.12-9.module_el8.0.0+30+832da3a1.noarch is filtered out by modular filtering&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;try to &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;--skip-broken&#39;&lt;/span&gt; to skip uninstallable packages or &lt;span class=&quot;token string&quot;&gt;&#39;--nobest&#39;&lt;/span&gt; to use not only best candidate packages&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have a package that is available somewhere but is being filtered.  Let&#39;s track it down:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ dnf module provides junit&lt;br /&gt;Last metadata expiration check: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;:37:17 ago on Wed &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; Jul &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; 06:31:36 AM EDT.&lt;br /&gt;junit-1:4.12-9.module_el8.0.0+30+832da3a1.noarch&lt;br /&gt;Module   &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; javapackages-tools:201801:8000020190628172923:b07bea58:x86_64&lt;br /&gt;Profiles &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;&lt;br /&gt;Repo     &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; PowerTools&lt;br /&gt;Summary  &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; Tools and macros &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Java packaging support&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ dnf module list javapackages-tools&lt;br /&gt;Last metadata expiration check: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;:39:15 ago on Wed &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; Jul &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; 06:31:36 AM EDT.&lt;br /&gt;CentOS-8 - PowerTools&lt;br /&gt;Name                             Stream               Profiles              Summary&lt;br /&gt;javapackages-tools               &lt;span class=&quot;token number&quot;&gt;201801&lt;/span&gt;               common                Tools and macros &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Java packaging support&lt;br /&gt;&lt;br /&gt;Hint: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;efault, &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;nabled, &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;disabled, &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;nstalled&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf module &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; javapackages-tools:201801/common&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With that last dependency is resolved, &lt;code&gt;yum-builddep subversion&lt;/code&gt; finishes successfully and we are ready to build &lt;code&gt;subversion&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Except that we have a small diversion in the form of a cautionary tale of a developer who failed to thoroughly read the documentation beforing diving in.  The source RPM has installed the files in the &lt;code&gt;rpmbuild/&lt;/code&gt; directory.  The &lt;code&gt;rpmbuild/SPECS/subversion.spec&lt;/code&gt; file contains the details about how to build the software and the RPMs.  At the top of this file are a number of directives configuring the build:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;head&lt;/span&gt; rpmbuild/SPECS/subversion.spec&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# set to zero to avoid running test suite&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;%bcond_without kwallet&lt;br /&gt;%bcond_without python2&lt;br /&gt;%bcond_with python3&lt;br /&gt;%bcond_without bdb&lt;br /&gt;%bcond_without tests&lt;br /&gt;%bcond_without pyswig&lt;br /&gt;&lt;br /&gt;%ifarch %&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;power64&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; s390x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Originally I naively tried editing the &lt;code&gt;subversion.spec&lt;/code&gt; file e.g. changing &lt;code&gt;%bcond_without python2&lt;/code&gt; to &lt;code&gt;%bcond_with python2&lt;/code&gt;.  Unfortunately (for me), the &lt;code&gt;%bcond&lt;/code&gt; directives work the opposite of the way my intuition thought.  So I was disabling Python 2 when I thought I was enabling it.  See &lt;a href=&quot;http://rpm.org/user_doc/conditional_builds.html&quot;&gt;http://rpm.org/user_doc/conditional_builds.html&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;Furthermore, the &lt;code&gt;%bcond&lt;/code&gt; directives are designed to create command line switches. So there is no need to edit the &lt;code&gt;subversion.spec&lt;/code&gt; file at all.&lt;/p&gt;
&lt;p&gt;(The worst part was that the build succeeded but took hours because I had&#39;t disabled the unit tests.  And I didn&#39;t end up with the Python 2 bindings.)&lt;/p&gt;
&lt;p&gt;So it turns out the spec file is configured to use Python 2 already.  We are going to disable the tests and the &lt;code&gt;kwallet&lt;/code&gt; integration via command line switches.  So the correct command is:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost SPECS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ rpmbuild -ba subversion.spec --without kwallet --without tests&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we tar up the resulting RPMs for installation on the target server:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost rpmbuild&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; RPMS/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mockbuild@localhost RPMS&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; cvf svn-1.10.2.tar *&lt;br /&gt;noarch/&lt;br /&gt;noarch/subversion-javahl-1.10.2-1.el8.noarch.rpm&lt;br /&gt;x86_64/&lt;br /&gt;x86_64/utf8proc-2.1.1-4.el8.x86_64.rpm&lt;br /&gt;x86_64/utf8proc-devel-2.1.1-4.el8.x86_64.rpm&lt;br /&gt;x86_64/utf8proc-debugsource-2.1.1-4.el8.x86_64.rpm&lt;br /&gt;x86_64/utf8proc-debuginfo-2.1.1-4.el8.x86_64.rpm&lt;br /&gt;x86_64/libserf-1.3.9-8.el8.x86_64.rpm&lt;br /&gt;x86_64/libserf-devel-1.3.9-8.el8.x86_64.rpm&lt;br /&gt;x86_64/libserf-debugsource-1.3.9-8.el8.x86_64.rpm&lt;br /&gt;x86_64/libserf-debuginfo-1.3.9-8.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-libs-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/python2-subversion-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-devel-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-gnome-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/mod_dav_svn-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-perl-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-ruby-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-tools-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-debugsource-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-libs-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/python2-subversion-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-devel-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-gnome-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/mod_dav_svn-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-perl-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-ruby-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;x86_64/subversion-tools-debuginfo-1.10.2-1.el8.x86_64.rpm&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, on the target server, we install the version of Subversion we compiled.  We do this because the Python bindings and Subversion need to be the same version.  Then we prevent &lt;code&gt;dnf&lt;/code&gt; from updating the &lt;code&gt;subversion&lt;/code&gt; package and creating an issue.&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;[root@target x86_64]# rpm -ivh subversion-1.10.2-1.el8.x86_64.rpm \&lt;br /&gt;subversion-libs-1.10.2-1.el8.x86_64.rpm \&lt;br /&gt;utf8proc-2.1.1-4.el8.x86_64.rpm  \&lt;br /&gt;mod_dav_svn-1.10.2-1.el8.x86_64.rpm \&lt;br /&gt;python2-subversion-1.10.2-1.el8.x86_64.rpm&lt;br /&gt;Verifying...                          ################################# [100%]&lt;br /&gt;Preparing...                          ################################# [100%]&lt;br /&gt;Updating / installing...&lt;br /&gt;   1:utf8proc-2.1.1-4.el8             ################################# [ 20%]&lt;br /&gt;   2:subversion-libs-1.10.2-1.el8     ################################# [ 40%]&lt;br /&gt;   3:subversion-1.10.2-1.el8          ################################# [ 60%]&lt;br /&gt;   4:mod_dav_svn-1.10.2-1.el8         ################################# [ 80%]&lt;br /&gt;   5:python2-subversion-1.10.2-1.el8  ################################# [100%]&lt;br /&gt;[root@target dnf]# cd /etc/dnf&lt;br /&gt;[root@target dnf]# cp dnf.conf dnf.conf.in&lt;br /&gt;[root@target dnf]# vi dnf.conf&lt;br /&gt;[root@target dnf]# diff dnf.conf.in dnf.conf&lt;br /&gt;6a7&lt;br /&gt;&gt; exclude=subversion subversion-libs mod_dav_svn&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Mocking Static Methods in Mockito</title>
		<link href="http://labnotes.decampo.org/2020/07/31/mockito-static-methods.html"/>
		<updated>2020-07-31T13:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/07/31/mockito-static-methods.html</id>
		<content type="html">&lt;p&gt;Mockito has been able to mock static methods since version 3.4.0 but the documentation doesn&#39;t explain how to mock methods that take arguments.&lt;/p&gt;
&lt;p&gt;E.g. to mock the JavaMail Transport class:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;    messageCaptor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArgumentCaptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MockedStatic&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; transport &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mockStatic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// mailer.send invokes Transport&lt;/span&gt;&lt;br /&gt;        mailer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subject&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        transport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageCaptor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Now we can see what mailer passed to Transport.send()&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; messageCaptor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or if we want to specify behavior:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MockedStatic&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; transport &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mockStatic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        transport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Transport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;thenThrow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        mailer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subject&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Convert Hyper-V disk to KVM</title>
		<link href="http://labnotes.decampo.org/2020/07/11/convert-hyper-v-to-kvm.html"/>
		<updated>2020-07-11T19:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/07/11/convert-hyper-v-to-kvm.html</id>
		<content type="html">&lt;p&gt;When converting a Hyper-V VM to KVM (as used in CentOS or RHEL) it is not enough
to simply convert the disk from vhd to qcow2 using &lt;code&gt;qemu&lt;/code&gt;.  Doing so will result
in errors concerning &lt;code&gt;dracut&lt;/code&gt; timing out.  Instead one must convert the guest OS
as well by using &lt;code&gt;virt-v2v&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sometimes you will run into the following error when attempting to convert the
disk:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; virt-v2v -i disk /var/images/virdisk.vhd -o &lt;span class=&quot;token builtin class-name&quot;&gt;local&lt;/span&gt; -of qcow2 -os /var/lib/libvirt/images/&lt;br /&gt;&lt;br /&gt;virt-v2v: error: libguestfs error: part_get_parttype: &lt;span class=&quot;token function&quot;&gt;parted&lt;/span&gt; exited with&lt;br /&gt;status &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;: Error: Can&#39;t have a partition outside the disk&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case for some reason Hyper-V created the partitions on the disk with
geometry outside the &amp;quot;physical&amp;quot; geometry of the disk.  To repair this we need
to convert the disk to RAW format in order to operate on the partition table.
Be warned that the RAW disk image will be as big as the logical size of the
VHD disk.&lt;/p&gt;
&lt;p&gt;Convert to RAW format:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ qemu-img convert virdisk.vhd -O raw virdisk.raw&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Issue the command &lt;code&gt;fdisk virdisk.raw&lt;/code&gt; to operate on the partition table
with fdisk.  Use &lt;code&gt;p&lt;/code&gt; to print the table and &lt;code&gt;v&lt;/code&gt; command to verify the issue:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;fdisk&lt;/span&gt; virdisk.raw&lt;br /&gt;Command &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: p&lt;br /&gt;Disk virdisk.raw: &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt; GiB, &lt;span class=&quot;token number&quot;&gt;68718428160&lt;/span&gt; bytes, &lt;span class=&quot;token number&quot;&gt;134215680&lt;/span&gt; sectors&lt;br /&gt;Units: sectors of &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; * &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; bytes&lt;br /&gt;Sector size &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logical/physical&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; bytes / &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; bytes&lt;br /&gt;I/O size &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;minimum/optimal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; bytes / &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt; bytes&lt;br /&gt;Disklabel type: dos&lt;br /&gt;Disk identifier: 0x000484cd&lt;br /&gt;&lt;br /&gt;Device       Boot   Start       End   Sectors Size Id Type&lt;br /&gt;virdisk.raw1 *       &lt;span class=&quot;token number&quot;&gt;2048&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;2099199&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;2097152&lt;/span&gt;   1G &lt;span class=&quot;token number&quot;&gt;83&lt;/span&gt; Linux&lt;br /&gt;virdisk.raw2      &lt;span class=&quot;token number&quot;&gt;2099200&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;134217727&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;132118528&lt;/span&gt;  63G 8e Linux LVM&lt;br /&gt;&lt;br /&gt;Command &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token function&quot;&gt;v&lt;/span&gt;&lt;br /&gt;Total allocated sectors &lt;span class=&quot;token number&quot;&gt;134217728&lt;/span&gt; greater than the maximum &lt;span class=&quot;token number&quot;&gt;134215680&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now this part is &amp;quot;dangerous&amp;quot; or would be if you weren&#39;t already operating on a
copy of the virtual disk.  Delete the problematic partition and recreate it with
the same starting point but with an end point that is proper.  In my case this
did not destroy any data, your mileage may vary.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;Command &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: d&lt;br /&gt;Partition number &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1,2&lt;/span&gt;, default &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Partition &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; has been deleted.&lt;br /&gt;&lt;br /&gt;Command &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: n&lt;br /&gt;Partition &lt;span class=&quot;token builtin class-name&quot;&gt;type&lt;/span&gt;&lt;br /&gt;   p   primary &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; primary, &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; extended, &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;   e   extended &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;container &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; logical partitions&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;Select &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default p&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: p&lt;br /&gt;Partition number &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;-4, default &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;First sector &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2099200&lt;/span&gt;-134215679, default &lt;span class=&quot;token number&quot;&gt;2099200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;:&lt;br /&gt;Last sector, +sectors or +size&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2099200&lt;/span&gt;-134215679, default &lt;span class=&quot;token number&quot;&gt;134215679&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;:&lt;br /&gt;&lt;br /&gt;Created a new partition &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; of &lt;span class=&quot;token builtin class-name&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Linux&#39;&lt;/span&gt; and of size &lt;span class=&quot;token number&quot;&gt;63&lt;/span&gt; GiB.&lt;br /&gt;Partition &lt;span class=&quot;token comment&quot;&gt;#2 contains a LVM2_member signature.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Do you want to remove the signature? &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Y&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;es/&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;N&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;o: N&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally use &lt;code&gt;w&lt;/code&gt; to write the new partition table.&lt;/p&gt;
&lt;p&gt;Now convert the raw image:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; virt-v2v -i disk /var/images/virdisk.raw -o &lt;span class=&quot;token builtin class-name&quot;&gt;local&lt;/span&gt; -of qcow2 -os /var/lib/libvirt/images/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Opening the &lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; -i disk /var/images/virdisk.raw&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Creating an overlay to protect the &lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; from being modified&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Initializing the target -o &lt;span class=&quot;token builtin class-name&quot;&gt;local&lt;/span&gt; -os /var/lib/libvirt/images/&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Opening the overlay&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Inspecting the overlay&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;28.7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Checking &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; sufficient &lt;span class=&quot;token function&quot;&gt;free&lt;/span&gt; disk space &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; the guest&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;28.7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Estimating space required on target &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; each disk&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;28.7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Converting CentOS Linux release &lt;span class=&quot;token number&quot;&gt;7.8&lt;/span&gt;.2003 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; to run on KVM&lt;br /&gt;virt-v2v: This guest has virtio drivers installed.&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;112.8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Mapping filesystem data to avoid copying unused and blank areas&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;114.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Closing the overlay&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;114.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Checking &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; the guest needs BIOS or UEFI to boot&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;114.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Assigning disks to buses&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;114.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Copying disk &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;/1 to /var/lib/libvirt/images/virdisk-sda &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;qcow2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100.00&lt;/span&gt;/100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;117.4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Creating output metadata&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;117.4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Finishing off&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; -l /var/lib/libvirt/images/&lt;br /&gt;total &lt;span class=&quot;token number&quot;&gt;2280904&lt;/span&gt;&lt;br /&gt;-rw-r--r--. &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; root root &lt;span class=&quot;token number&quot;&gt;2335703040&lt;/span&gt; Jun &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;:34 virdisk-sda&lt;br /&gt;-rw-r--r--. &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; root root       &lt;span class=&quot;token number&quot;&gt;1270&lt;/span&gt; Jun &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;:34 virdisk.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Congratulations, the disk is converted.&lt;/p&gt;
&lt;p&gt;If you see the following error:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;113.7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Copying disk &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;/1 to /var/lib/libvirt/images/virdisk-sda &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;qcow2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;virt-v2v: error: libguestfs error: qemu-img:&lt;br /&gt;/var/lib/libvirt/images/virdisk-sda: qemu-img exited with error status &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;.&lt;br /&gt;To see full error messages you may need to &lt;span class=&quot;token builtin class-name&quot;&gt;enable&lt;/span&gt; debugging.&lt;br /&gt;Do:&lt;br /&gt;  &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;LIBGUESTFS_DEBUG&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;LIBGUESTFS_TRACE&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;and run the &lt;span class=&quot;token builtin class-name&quot;&gt;command&lt;/span&gt; again.  For further information, read:&lt;br /&gt;  http://libguestfs.org/guestfs-faq.1.html&lt;span class=&quot;token comment&quot;&gt;#debugging-libguestfs&lt;/span&gt;&lt;br /&gt;You can also run &lt;span class=&quot;token string&quot;&gt;&#39;libguestfs-test-tool&#39;&lt;/span&gt; and post the *complete* output&lt;br /&gt;into a bug report or message to the libguestfs mailing list.&lt;br /&gt;&lt;br /&gt;If reporting bugs, run virt-v2v with debugging enabled and include the&lt;br /&gt;complete output:&lt;br /&gt;&lt;br /&gt;  virt-v2v -v -x &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is because the user you are running as does not have permission to write to
the target directory, in my case &lt;code&gt;/var/lib/libvirt/images&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, once the VM is booted, we should repair the filesystem in case it still
thinks it has the old size.  To repair filesystem, go into rescue mode, unmount,
run fsck/xfs_repair, remount and exit:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;# systemctl rescue&lt;br /&gt;# umount /dev/mapper/centos_virdisk-home&lt;br /&gt;# fsck /dev/mapper/centos_virdisk-home&lt;br /&gt;# xfs_repair /dev/mapper/centos_virdisk-home&lt;br /&gt;# mount /dev/mapper/centos_virdisk-home&lt;br /&gt;# exit&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>SLF4J issue with WildFly</title>
		<link href="http://labnotes.decampo.org/2020/07/03/wildfly-slf4j-classcastexception.html"/>
		<updated>2020-07-03T18:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/07/03/wildfly-slf4j-classcastexception.html</id>
		<content type="html">&lt;p&gt;If you are getting the following error on WildFly or JBoss:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Caused by: java.lang.ClassCastException: class org.slf4j.impl.Slf4jLoggerFactory cannot be cast to class ch.qos.logback.classic.LoggerContext (org.slf4j.impl.Slf4jLoggerFactory is in unnamed module of loader &#39;org.slf4j.impl@1.0.4.GA&#39; @604f2c4f; ch.qos.logback.classic.LoggerContext is in unnamed module of loader &#39;deployment.idp.war&#39; @4206bf50)&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then add a &lt;code&gt;jboss-deployment-structure.xml&lt;/code&gt; file to the &lt;code&gt;WEB-INF/&lt;/code&gt; directory of your war archive (or the &lt;code&gt;META-INF/&lt;/code&gt; in the case of an ear or ejb):&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;jboss-deployment-structure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;deployment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Exclude server libraries which conflict with ours --&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;exclusions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;org.slf4j&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;org.slf4j.impl&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;exclusions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;deployment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;jboss-deployment-structure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will prevent WildFly from using the its versions of the SLF4J libraries for the deployed artifact allowing it to use whatever had been packaged instead.&lt;/p&gt;
&lt;p&gt;Note that I encountered this issue when deploying Shibboleth IdP 4.0 on WildFly.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Fixing my Borked Ruby Environment</title>
		<link href="http://labnotes.decampo.org/2020/07/02/fixing-jekyll-environment.html"/>
		<updated>2020-07-02T14:00:00Z</updated>
		<id>http://labnotes.decampo.org/2020/07/02/fixing-jekyll-environment.html</id>
		<content type="html">&lt;p&gt;So after a couple of updates and who knows what else, I found myself with an environment (Fedora 32 if you were wondering) that would no longer run jekyll.  This really caused by blogging level to stop completely since I couldn&#39;t preview any of the posts.  As the potential posts piled up in my drafts folder, I eventually carved out some time to take care of this.&lt;/p&gt;
&lt;p&gt;The error I was getting when running jekyll (actually &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;) was downright perplexing.  It would complain that a shared library for one of the dependent gems was missing.  The error message gave the full path to the file.  The perplexing thing is that the file existed and my user had permissions to read it.&lt;/p&gt;
&lt;p&gt;The library belonged to the commonmark gem.  I tried reinstalling it via &lt;code&gt;bundle&lt;/code&gt; and via &lt;code&gt;gem&lt;/code&gt; both as a regular user and as root.  No luck, it refused to find the shared library that was right where it claimed to be looking for it.&lt;/p&gt;
&lt;p&gt;So I figured I&#39;d burn the whole thing down and try again.  First thing was to
uninstall all gems using &lt;code&gt;gem&lt;/code&gt;.  User-level gems were not much of a problem, I just used &lt;code&gt;gem uninstall -aIx&lt;/code&gt;.  For system-level gems I had to repeatedly alternate between these commands until there were no more gems remaining:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; gem uninstall -aIx&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; gem uninstall -i /usr/local/share/gems -aIx&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; gem uninstall -i /usr/share/gems -aIx&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With all the gems annihilated from the system, time to reinstall ruby:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dnf reinstall ruby libyaml rubygem-psych rubygems rubygem-openssl &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    rubygem-bigdecimal rubygem-io-console rubygem-irb rubygem-json &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    rubygem-psych rubygem-rdoc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point I also made a directory for user-level gems and set &lt;code&gt;$GEM_HOME&lt;/code&gt; in my &lt;code&gt;.bashrc&lt;/code&gt; but unfortunately there&#39;s a bug which prevents gem from respecting that setting.  I did eventually use the directory for the install target for bundle however.&lt;/p&gt;
&lt;p&gt;Now we install bundler and use it to install jekyll:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;gem &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; bundler&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -rf .bundle&lt;br /&gt;bundle config &lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; path &lt;span class=&quot;token string&quot;&gt;&#39;/home/dev/gems&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Edit Gemfile to have the correct version of jekyll that github-pages expects&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; Gemfile&lt;br /&gt;bundle &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Verify it works&lt;/span&gt;&lt;br /&gt;bundle &lt;span class=&quot;token builtin class-name&quot;&gt;exec&lt;/span&gt; jekyll serve&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# commit the Gemfile changes&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; Gemfile Gemfile.lock&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that my environment works again I hope to be blogging more.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Configuring Wildfly for JWT Authentication</title>
		<link href="http://labnotes.decampo.org/2019/03/17/wildfly-jwt-authentication.html"/>
		<updated>2019-03-17T12:00:00Z</updated>
		<id>http://labnotes.decampo.org/2019/03/17/wildfly-jwt-authentication.html</id>
		<content type="html">&lt;p&gt;In this post we describe how to configure WildFly to access JSON Web Tokens (JWT) via the Authentication header using the Bearer schema.  This allows you to install stateless authenticated REST services on WildFly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Another way to accomplish this is to use the KeyCloak server and install its components in your WildFly server.  For large deployments that is the better approach.  This approach is more suitable to a small deployment where KeyCloak would be overkill.&lt;/p&gt;
&lt;p&gt;We adapt the instructions and code from &lt;a href=&quot;https://github.com/wildfly/quickstart/tree/master/jaxrs-jwt&quot;&gt;https://github.com/wildfly/quickstart/tree/master/jaxrs-jwt&lt;/a&gt;.  This adaptation does not use a keystore but simply a pre-generated public/private key pair.  This reduces the complexity and positions our server better for cloud deployment (as their are no external files to access).&lt;/p&gt;
&lt;h2&gt;Generate the keys&lt;/h2&gt;
&lt;p&gt;First we generate a public/private key pair.  Note that you will be able to generate different key pairs for different environments (e.g. development, test, production).&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Use an empty passphrase when prompted&lt;/span&gt;&lt;br /&gt;$ ssh-keygen -t rsa -b &lt;span class=&quot;token number&quot;&gt;4096&lt;/span&gt; -m PEM -f jwtRS256.key&lt;br /&gt;$ openssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256.key.pub&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# To see the private key:&lt;/span&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; jwtRS256.key&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# To see the public key:&lt;/span&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; jwtRS256.key.pub&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Configure Wildfly&lt;/h2&gt;
&lt;p&gt;Here we configure Wildfly to enforce the presence of a bearer token for secure application resources.  Start the WildFly admin command line interface:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$WILDFLY_HOME&lt;/span&gt;/bin&lt;br /&gt;./jboss-cli.sh --connect&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The remaining commands in this section are input for the WildFly admin CLI.&lt;/p&gt;
&lt;p&gt;Add a new token security realm to elytron for authentication using JWTs, using the public key that was generated.  Replace the fake key below with the key from your &lt;code&gt;jwtRS256.key.pub&lt;/code&gt; file:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;    /subsystem=elytron/token-realm=jwt-realm:add( \&lt;br /&gt;        jwt={ \&lt;br /&gt;            issuer=[&quot;my-application-issuer&quot;], \&lt;br /&gt;            audience=[&quot;my-application-audience&quot;], \&lt;br /&gt;            public-key=&quot;-----BEGIN PUBLIC KEY-----&lt;br /&gt;    AXaRqQL18r/NiUV7vpQyLvqjC34pLYF3l3mrpfeIG1bXATsqVmJkNhAkkIyjLcTA&lt;br /&gt;    qB5a+lpWb08GtpkcLX7G2+s7Js05CngGv4wGHmp9yiO9z5nMIcQXQXtT41Qn6716&lt;br /&gt;    DGbDiTBQ+xycByEXuM6hU25rTnlWfGCRigm0zSjg6716Qr4zsYT7NyQWb+K7ntvd&lt;br /&gt;    cuYjOfSbhY0imX6TYU8Edv4YOJe2pBeteHV1UHYcwMBGjt661yWWhx6fwJQMIA+v&lt;br /&gt;    rKh58z7Pi5mqr0rFTX9zDK1h79vygXNTAlZcRubVjEpa8fCgvYMrbqq1CC12j07d&lt;br /&gt;    dHbCWv3cjoVcnmW4g6k4M6xLx6kpKcBbCDiaEalJ2o872GNMXqJYuFw7YmmQaskw&lt;br /&gt;    sUZTJjhu7BgofU3/t01VAWe0ye2s9H0LzUuWNUx1YcKgpi0efGUB/2rmejfFTUr/&lt;br /&gt;    1pbTTXTqxiuB3Jnt+dhA/XJX11ALo27Ngzto0nkC/2s0csGq7uqJ4Dt2bGBvs1jB&lt;br /&gt;    DWo76frVXuVNJqJACuZ1eL2JKt12vu7c2an++UooHZDDcRGkbivf4wBycxJmdKpE&lt;br /&gt;    nN0SQ9j42ldOVz708CGgbXTJCcaZ6gH0Hbm1d6v+vpZESmaKjUtvFI/gnFGCqqWM&lt;br /&gt;    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxjYdscscXjbDb/kfnfXc&lt;br /&gt;    7ZFoJOusLdXxfouD8WGy5oMCAwEAAQ==&lt;br /&gt;    -----END PUBLIC KEY-----&quot; \&lt;br /&gt;        },principal-claim=&quot;sub&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a new security domain, which uses the jwt security realm:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;    /subsystem=elytron/security-domain=jwt-domain:add( \&lt;br /&gt;        realms=[{ \&lt;br /&gt;            realm=jwt-realm, \&lt;br /&gt;            role-decoder=groups-to-roles \&lt;br /&gt;        }],permission-mapper=default-permission-mapper, \&lt;br /&gt;        default-realm=jwt-realm)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create http authentication factory that uses BEARER_TOKEN authentication:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;    /subsystem=elytron/http-authentication-factory=jwt-http-authentication:add( \&lt;br /&gt;        security-domain=jwt-domain, \&lt;br /&gt;        http-server-mechanism-factory=global, \&lt;br /&gt;        mechanism-configurations=[{ \&lt;br /&gt;            mechanism-name=&quot;BEARER_TOKEN&quot;, \&lt;br /&gt;            mechanism-realm-configurations=[{ \&lt;br /&gt;                realm-name=&quot;jwt-realm&quot; \&lt;br /&gt;        }]}])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Configure Undertow to use our http authentication factory for authentication:&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;    /subsystem=undertow/application-security-domain=other:add( \&lt;br /&gt;        http-authentication-factory=jwt-http-authentication)&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Configure the Web Application&lt;/h2&gt;
&lt;p&gt;A few entries in the &lt;code&gt;web.xml&lt;/code&gt; for your web application are required.&lt;/p&gt;
&lt;p&gt;First, we put the private key (from your &lt;code&gt;jwtRS256.key&lt;/code&gt; file) in an environment entry.  Your private key will be much longer than the fake one I have used here:&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Private key for signing JWTs&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;jwtPrivateKey&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;java.lang.String&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- The development key, use an overlay in production --&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;-----BEGIN RSA PRIVATE KEY-----&lt;br /&gt;B73cQ1t2nx+0v6Fz7NcfhEbejyk02Kf+NJbKZPuZfnZlHSqH9xecxN2g1OYZtd0n&lt;br /&gt;+Gg93QKCAQBd45hMMNohn6d+KkXRnNRkQLzVCQPMCHNAJL6773QPjeSskvvlXVOR&lt;br /&gt;E2uxFupdP6qMV/oMHlm+XT6b/AeWma1o3oa6zvoEXx+dx+WTXjTHZEvTguZEcv7w&lt;br /&gt;6l1T3bul5ujmK3DbHjfX77V3tDLYN0xQj6KZazRf9MQsZoC5xWKDLPGdfogS+1db&lt;br /&gt;sr6Tq725Op4wRRwPDEYZthonddVyuMWrDElkC3HrK+31X+4wuP10gPdiayq2O3p8&lt;br /&gt;NyCaimTtIELvLa32hJxsGQe8juTZ15quCmAu4tffmRdX3z1zFXoI6ObkM6hDhGWw&lt;br /&gt;myHW4Qzjk6vijIYbeu7n5Tr77w8VSuh9AoIBAFhbLDJPmnC8Tp/BS5U2ntaxS8Qb&lt;br /&gt;+icGXNguaHaw9niUCflHeWqaHYDNxGchnlFoEo5WxWuw0hC/peB2bjFLVFYif/mV&lt;br /&gt;xUZfLBvKOUbeCor/m+jDoT19AQFpLu/at5Z82nLKyH3CqS4MO9VDs3PPZF6cbV89&lt;br /&gt;fC2JD/k0MXuCRPa9t22v4BYBxG1AzcvTr/ly7pxNX8hoEHkNjx3e9ZrjyWa3pWFo&lt;br /&gt;is4WSrogQVJHmCAceaTnUrSbfZ3SfAcElA/Qf94HQNrqIT5WetFy6INDdHD8WS61&lt;br /&gt;wJMTAe2BezELmGR2NyBQp4IZrBEEtH03dBX9H61lm9raBId4Cc84C/mThes=&lt;br /&gt;-----END RSA PRIVATE KEY-----&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we standard &lt;code&gt;security-constraint&lt;/code&gt; and &lt;code&gt;login-config&lt;/code&gt; entries.  Replace the &lt;code&gt;url-pattern&lt;/code&gt; and &lt;code&gt;role-name&lt;/code&gt; with appropriate values for your application.  The &lt;code&gt;url-pattern&lt;/code&gt; determines which REST URLs are protected.  The &lt;code&gt;role-name&lt;/code&gt; enforces a role for the user (you must have at least one role).  There is a lot of flexibity available here that we will not cover.  Also replace the &lt;code&gt;realm-name&lt;/code&gt; and &lt;code&gt;web-resource-name&lt;/code&gt; with appropriate values, although these are not referenced elsewhere.&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;security-constraint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;web-resource-collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;web-resource-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Secure REST URLs&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;web-resource-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/admin/*&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;web-resource-collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;auth-constraint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;role-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;administrator&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;role-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;auth-constraint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;security-constraint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;login-config&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;auth-method&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;BEARER_TOKEN&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;auth-method&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;realm-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;ACME Corp.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;realm-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;login-config&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Authenticating Users&lt;/h2&gt;
&lt;p&gt;In this section we present some Java snippets to demonstrate how to create and sign a JWT once your user is authenticated.  The code here uses Context and Dependency Injection (CDI), it is assumed you are familiar with it.&lt;/p&gt;
&lt;p&gt;First, a simple CDI bean to read the private key from the JNDI environment:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Dependent&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JwtKey&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Resource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;jwtPrivateKey&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; privateKeyAsString&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getPrivateKeyAsString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; privateKeyAsString&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we make a producer method for the &lt;code&gt;PrivateKey&lt;/code&gt; instance:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; RSA_STRIP_REGEX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;BEGIN RSA PRIVATE KEY|END RSA PRIVATE KEY|-|\\s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Produces&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PrivateKey&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;producePrivateKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JwtKey&lt;/span&gt; jwtKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;KeyStoreException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;GeneralSecurityException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; keyString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; jwtKey&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrivateKeyAsString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; base64Key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; keyString&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RSA_STRIP_REGEX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; keyBytes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;base64Key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PKCS8EncodedKeySpec&lt;/span&gt; keySpec &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PKCS8EncodedKeySpec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;keyBytes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;KeyFactory&lt;/span&gt; keyFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;KeyFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;RSA&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; keyFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;generatePrivate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;keySpec&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the code to create the token using the &lt;a href=&quot;https://connect2id.com/products/nimbus-jose-jwt&quot;&gt;Nimbus + JOSE library&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Inject&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PrivateKey&lt;/span&gt; privateKey&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createJwt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; subject&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; roles&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JOSEException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; claims &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;iss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ISSUER&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;aud&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; AUDIENCE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createArrayBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;roles&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;exp&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; EXPIRATION&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JWSHeader&lt;/span&gt; header &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JWSHeader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Builder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;JWSAlgorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RS256&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;JOSEObjectType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;JWT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JWSObject&lt;/span&gt; jws &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JWSObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;header&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;claims&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        jws&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RSASSASigner&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;privateKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; jws&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we define a REST endpoint to send the token to the user:&lt;/p&gt;
&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@POST&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/token&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Consumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;APPLICATION_FORM_URLENCODED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token annotation punctuation&quot;&gt;@FormParam&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; username&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token annotation punctuation&quot;&gt;@FormParam&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; password&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt; user &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; password&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Status&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UNAUTHORIZED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; roles &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRolesForUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; token &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; jwtCreator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createJwt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; roles&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JsonObject&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;roles&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createArrayBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;roles&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;token&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Client-side&lt;/h2&gt;
&lt;p&gt;Just a few notes about the client-side.  You can authenticate the user by POSTing to the &lt;code&gt;token&lt;/code&gt; endpoint and get back the token in the response.  Save the token in whatever mechanism is appropriate for your application.&lt;/p&gt;
&lt;p&gt;Whenever accessing a protected URL, include the token using the standard &lt;code&gt;Authentication&lt;/code&gt; header using the &lt;code&gt;Bearer&lt;/code&gt; schema (see &lt;a href=&quot;https://jwt.io/introduction/&quot;&gt;https://jwt.io/introduction/&lt;/a&gt; for more details).  If the token expires or is otherwise invalid, WildFly will return a &lt;code&gt;403 Forbidden&lt;/code&gt; response.  At that point you can re-prompt the user for credentials and obtain a new token (or take whatever action is appropriate for your application).&lt;/p&gt;
&lt;h2&gt;Configure Wildfly overlay&lt;/h2&gt;
&lt;p&gt;As a final note, you may be concerned that the private key has been built into the war archive.  There is no need to have multiple builds for multiple environments however.  By using the &lt;a href=&quot;http://docs.wildfly.org/13/Admin_Guide.html#Deployment_Overlays&quot;&gt;WildFly overlay functionality&lt;/a&gt;, combined with the override ability via &lt;code&gt;jboss-web.xml&lt;/code&gt; we can replace the development private key with keys for each environment.&lt;/p&gt;
&lt;p&gt;First, create &lt;code&gt;/path/to/overlay/jboss-web.xml&lt;/code&gt; file containing the actual private key (obviously use a path that makes sense for your environment):&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token prolog&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;jboss-web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;jboss-web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Private key for signing JWTs&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;jwtPrivateKey&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;java.lang.String&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;env-entry-value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;-----BEGIN RSA PRIVATE KEY-----&lt;br /&gt;gXNTAlZcRubVjEpa8fCgvYMrbqq1CC12j07dDWo76frVXuVNJqJACuZ1eL2JKt12&lt;br /&gt;vu7c2an++UooHZDDcRGkbivf4wBycxJmdKpEdHbCWv3cjoVcnmW4g6k4M6xLx6kp&lt;br /&gt;KcBbCDiaEalJ2o872GNMXqJYuFw7YmmQaskwqB5a+lpWb08GtpkcLX7G2+s7Js05&lt;br /&gt;CngGv4wGHmp9yiO9z5nMIcQXQXtT41Qn6716sUZTJjhu7BgofU3/t01VAWe0ye2s&lt;br /&gt;9H0LzUuWNUx1YcKgpi0efGUB/2rmejfFTUr/1pbTTXTqxiuB3Jnt+dhA/XJX11AL&lt;br /&gt;o27Ngzto0nkC/2s0csGq7uqJ4Dt2bGBvs1jBnN0SQ9j42ldOVz708CGgbXTJCcaZ&lt;br /&gt;-----END RSA PRIVATE KEY-----&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry-value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;env-entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;jboss-web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then use the command line tool to associate the overlay to the deployment, replacing the &lt;code&gt;name&lt;/code&gt;, the path to the overlay and the &lt;code&gt;deployments&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$WILDFLY_HOME&lt;/span&gt;/bin&lt;br /&gt;$ ./jboss-cli.sh --connect&lt;br /&gt;deployment-overlay &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    --name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myOverlay &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    --content&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/WEB-INF/web.xml&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/path/to/overlay/jboss-web.xml &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    --deployments&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;my-war-file.war &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;    --redeploy-affected&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jwt.io/introduction/&quot;&gt;https://jwt.io/introduction/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wildfly/quickstart/tree/master/jaxrs-jwt&quot;&gt;https://github.com/wildfly/quickstart/tree/master/jaxrs-jwt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.wildfly.org/13/Admin_Guide.html#Deployment_Overlays&quot;&gt;http://docs.wildfly.org/13/Admin_Guide.html#Deployment_Overlays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://connect2id.com/products/nimbus-jose-jwt&quot;&gt;https://connect2id.com/products/nimbus-jose-jwt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
</feed>